Token:Code=293 Name=  PROGRAM Line=  12 Col=   1 Spelling= "program"
Token:Code=260 Name=       ID Line=  12 Col=   9 Spelling= "p047_000"
Token:Code=268 Name= SEMICOLON Line=  12 Col=  17 Spelling= ";"
#005 program_parameters -> empty
#002 program_head -> PROGRAM ID(p047_000) program_parameters ;
#010 variable_declarations -> empty
Token:Code=297 Name=      VAR Line=  13 Col=   3 Spelling= "var"
Token:Code=260 Name=       ID Line=  13 Col=   7 Spelling= "b"
#008 identifier_list -> ID(b)
 identifier_list={b}Token:Code=269 Name=    COLON Line=  13 Col=   8 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=   9 Spelling= "boolean"
#014 standard_type -> ID(boolean)

Symbol(Type Symbol) id(boolean)
  type(Boolean)
    size(1) alignment(1)
#012 type -> standard_type
Token:Code=268 Name= SEMICOLON Line=  13 Col=  16 Spelling= ";"
#011 variable_declarations -> variable_declarations VAR identifier_list:type;
Token:Code=297 Name=      VAR Line=  14 Col=   3 Spelling= "var"
Token:Code=260 Name=       ID Line=  14 Col=   7 Spelling= "i"
#008 identifier_list -> ID(i)
 identifier_list={i}Token:Code=267 Name=    COMMA Line=  14 Col=   8 Spelling= ","
Token:Code=260 Name=       ID Line=  14 Col=   9 Spelling= "j"
#009 identifier_list -> identifier_list , ID(j)
 identifier_list={i,j}Token:Code=269 Name=    COLON Line=  14 Col=  10 Spelling= ":"
Token:Code=260 Name=       ID Line=  14 Col=  11 Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type -> standard_type
Token:Code=268 Name= SEMICOLON Line=  14 Col=  18 Spelling= ";"
#011 variable_declarations -> variable_declarations VAR identifier_list:type;
Token:Code=258 Name=    BEGIN Line=  15 Col=   1 Spelling= "begin"
#015 subprogram_declarations -> empty
#003 program_declarations -> variable_declarations subprogram_declarations
Token:Code=260 Name=       ID Line=  16 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  16 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  16 Col=   6 Spelling= "true"
Token:Code=268 Name= SEMICOLON Line=  16 Col=  10 Spelling= ";"
#063 factor -> ID(true)
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement -> variable := expression
#027 statement_list -> statement
Token:Code=260 Name=       ID Line=  17 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  17 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  17 Col=   6 Spelling= "i"
Token:Code=270 Name=      EQU Line=  17 Col=   8 Spelling= "="
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#042 relop -> =
Token:Code=260 Name=       ID Line=  17 Col=  11 Spelling= "j"
Token:Code=268 Name= SEMICOLON Line=  17 Col=  12 Spelling= ";"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
Token:Code=260 Name=       ID Line=  18 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  18 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  18 Col=   6 Spelling= "i"
Token:Code=271 Name=      NEQ Line=  18 Col=   8 Spelling= "<>"
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#043 relop -> <>
Token:Code=260 Name=       ID Line=  18 Col=  11 Spelling= "j"
Token:Code=268 Name= SEMICOLON Line=  18 Col=  12 Spelling= ";"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
Token:Code=260 Name=       ID Line=  19 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  19 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  19 Col=   6 Spelling= "i"
Token:Code=272 Name=      LES Line=  19 Col=   8 Spelling= "<"
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#044 relop -> <
Token:Code=260 Name=       ID Line=  19 Col=  11 Spelling= "j"
Token:Code=268 Name= SEMICOLON Line=  19 Col=  12 Spelling= ";"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
Token:Code=260 Name=       ID Line=  20 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  20 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  20 Col=   6 Spelling= "i"
Token:Code=273 Name=      LEQ Line=  20 Col=   8 Spelling= "<="
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#045 relop -> <=
Token:Code=260 Name=       ID Line=  20 Col=  11 Spelling= "j"
Token:Code=268 Name= SEMICOLON Line=  20 Col=  12 Spelling= ";"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
Token:Code=260 Name=       ID Line=  21 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  21 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  21 Col=   6 Spelling= "i"
Token:Code=274 Name=      GRT Line=  21 Col=   8 Spelling= ">"
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#046 relop -> >
Token:Code=260 Name=       ID Line=  21 Col=  11 Spelling= "j"
Token:Code=268 Name= SEMICOLON Line=  21 Col=  12 Spelling= ";"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
Token:Code=260 Name=       ID Line=  22 Col=   3 Spelling= "b"
Token:Code=265 Name=   ASSIGN Line=  22 Col=   4 Spelling= ":="
#034 variable -> ID(b)
Token:Code=260 Name=       ID Line=  22 Col=   6 Spelling= "i"
Token:Code=275 Name=      GEQ Line=  22 Col=   8 Spelling= ">="
#063 factor -> ID(i)
#056 term -> factor
#048 simple_expression -> term
#047 relop -> >=
Token:Code=260 Name=       ID Line=  22 Col=  11 Spelling= "j"
Token:Code=259 Name=      END Line=  23 Col=   1 Spelling= "end"
#063 factor -> ID(j)
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
#029 statement -> variable := expression
#028 statement_list -> statement_list ; statement
#026 optional_statements -> statement_list
#024 compound_statement -> BEGIN optional_statement END
Token:Code=266 Name=   PERIOD Line=  23 Col=  14 Spelling= "."
#004 program_body -> compound_statement .
#001 program -> program_head program_declarations program_body

Locality: lexical level 1

  Symbol(Variable Symbol) id(b)
    type(Boolean)
      size(1) alignment(1)
    lexicallevel(1) address(5)
  Symbol(Variable Symbol) id(i)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(6)
  Symbol(Variable Symbol) id(j)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(7)

Locality: lexical level 1

  Symbol(Variable Symbol) id(b)
    type(Boolean)
      size(1) alignment(1)
    lexicallevel(1) address(5)
  Symbol(Variable Symbol) id(i)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(6)
  Symbol(Variable Symbol) id(j)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(7)

