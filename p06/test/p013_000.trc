
Token:Code=294 Name=   PROGRAM line= 12 col=  1 Spelling="program"
Token:Code=301 Name=        ID line= 12 col=  9 Spelling="p013_000"
Token:Code=266 Name= SEMICOLON line= 12 col= 17 Spelling=";"
#005 program_parameters -> empty
#002 program_head -> PROGRAM ID(p013_000) program_parameters ;
Before::LexicalLevel=0 After::LexicalLevel=1

#010 variable_declarations -> empty
Token:Code=298 Name=       VAR line= 13 col=  3 Spelling="var"
Token:Code=301 Name=        ID line= 13 col=  7 Spelling="a"
#008 identifier_list -> ID(a) identifier_list={a}
Token:Code=267 Name=     COLON line= 13 col=  8 Spelling=":"
Token:Code=281 Name=     ARRAY line= 13 col=  9 Spelling="array"
Token:Code=276 Name=  LBRACKET line= 13 col= 14 Spelling="["
Token:Code=302 Name=    INTLIT line= 13 col= 15 Spelling="1"
Token:Code=278 Name=     RANGE line= 13 col= 16 Spelling=".."
Token:Code=302 Name=    INTLIT line= 13 col= 18 Spelling="10"
Token:Code=277 Name=  RBRACKET line= 13 col= 20 Spelling="]"
Token:Code=291 Name=        OF line= 13 col= 22 Spelling="of"
Token:Code=301 Name=        ID line= 13 col= 25 Spelling="integer"
#014 standard_type -> ID(integer)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#013 type -> ARRAY[INTLIT .. INTLIT] OF standard_type
Token:Code=266 Name= SEMICOLON line= 13 col= 32 Spelling=";"
#011 variable_declarations -> variable_declarations VAR identifier_list:type;
Token:Code=282 Name=     BEGIN line= 14 col=  1 Spelling="begin"
#015 subprogram_declarations -> empty
#003 program_declarations -> variable_declarations subprogram_declarations
Token:Code=286 Name=       END line= 15 col=  1 Spelling="end"
#025 optional_statements -> empty
#024 compound_statement -> BEGIN optional_statement END
Token:Code=264 Name=    PERIOD line= 15 col= 14 Spelling="."
#004 program_body -> compound_statement .
#001 program -> program_head program_declarations program_body
Before::LexicalLevel=1
Locality: lexical level 1


  Symbol(Variable Symbol) id(a)
    type(Array)
      Size(10)
      Index Type
        type(Range)
          Constant value(1)
            type(Integer)
              size(1) alignment(1)
          Constant value(10)
            type(Integer)
              size(1) alignment(1)
      Element Type
        type(Integer)
          size(1) alignment(1)
    lexicallevel(1) address(5)
 After::LexicalLevel=0

Locality: lexical level 0


