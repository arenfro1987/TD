Token:Code=293 Name=  PROGRAM Line=  12 Col=   1 Spelling= "program"
Token:Code=260 Name=       ID Line=  12 Col=   9 Spelling= "p068_000"
Token:Code=268 Name= SEMICOLON Line=  12 Col=  17 Spelling= ";"
#005 program_parameters -> empty
#002 program_head -> PROGRAM ID(p068_000) program_parameters ;
#010 variable_declarations -> empty
Token:Code=297 Name=      VAR Line=  13 Col=   3 Spelling= "var"
Token:Code=260 Name=       ID Line=  13 Col=   7 Spelling= "a"
#008 identifier_list -> ID(a)
 identifier_list={a}Token:Code=269 Name=    COLON Line=  13 Col=   8 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=   9 Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type -> standard_type
Token:Code=268 Name= SEMICOLON Line=  13 Col=  16 Spelling= ";"
#011 variable_declarations -> variable_declarations VAR identifier_list:type;
Token:Code=258 Name=    BEGIN Line=  14 Col=   1 Spelling= "begin"
#015 subprogram_declarations -> empty
#003 program_declarations -> variable_declarations subprogram_declarations
Token:Code=260 Name=       ID Line=  15 Col=   3 Spelling= "a"
Token:Code=265 Name=   ASSIGN Line=  15 Col=   4 Spelling= ":="
#034 variable -> ID(a)
Token:Code=301 Name=   INTLIT Line=  15 Col=   6 Spelling= "68"
#068 factor -> INTLIT(68)
#056 term -> factor
Token:Code=259 Name=      END Line=  16 Col=   1 Spelling= "end"
#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement -> variable := expression
#027 statement_list -> statement
#026 optional_statements -> statement_list
#024 compound_statement -> BEGIN optional_statement END
Token:Code=266 Name=   PERIOD Line=  16 Col=  14 Spelling= "."
#004 program_body -> compound_statement .
#001 program -> program_head program_declarations program_body

Locality: lexical level 1

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(5)

Locality: lexical level 1

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(1) address(5)

