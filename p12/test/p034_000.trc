Token:Code=294 Name=  PROGRAM Line=  12 Col=   1 Spelling= "program"
Token:Code=260 Name=       ID Line=  12 Col=   9 Spelling= "p034_000"
Token:Code=268 Name= SEMICOLON Line=  12 Col=  17 Spelling= ";"
#005 program_parameters -> Empty
#002 program_head->PROGRAM ID program_parameters
#010 declarations->Empty
Token:Code=298 Name=      VAR Line=  13 Col=   3 Spelling= "var"
Token:Code=260 Name=       ID Line=  13 Col=   7 Spelling= "count"
#008 identifier_list->ID(count)
 identifier_list={count}Token:Code=269 Name=    COLON Line=  13 Col=  12 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=  13 Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type->standard_type
Token:Code=268 Name= SEMICOLON Line=  13 Col=  20 Spelling= ";"
#011 declarations->declarations VAR identifier_list: type ;
Token:Code=258 Name=    BEGIN Line=  14 Col=   1 Spelling= "begin"
#015 subprogram_declarations->Empty
#003 program_declarations->declarations subprogram_declarations
Token:Code=260 Name=       ID Line=  15 Col=   3 Spelling= "count"
Token:Code=265 Name=   ASSIGN Line=  15 Col=   8 Spelling= ":="
#034 VARIABLE->ID(count)

Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)
          lda       0         5         
Token:Code=302 Name= INTLIT   Line= 15  Col= 10  Spelling= "10"
#068 factor -> INTLIT(10)

          ldc       i         10        
#056 term -> factor
Token:Code=268 Name= SEMICOLON Line= 15  Col= 12  Spelling= ";"

#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement->variable := expression

          lda       0         5         

          ldc       i         10        

          sti       i                   
#027 statement_list->statement

          lda       0         5         

          ldc       i         10        

          sti       i                   
Token:Code=303 Name= PLUS     Line= 16  Col= 3   Spelling= "while"
Token:Code=260 Name= ID       Line= 16  Col= 9   Spelling= "count"
Token:Code=275 Name= GEQ      Line= 16  Col= 14  Spelling= ">="
#063 factor -> ID(count)

Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#047 relop -> >=
Token:Code=302 Name= INTLIT   Line= 16  Col= 16  Spelling= "0"
#068 factor -> INTLIT(0)

          ldc       i         0         
#056 term -> factor
Token:Code=285 Name= DO       Line= 16  Col= 18  Spelling= "do"

#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression

          lvi       0         5         

          ldc       i         0         

          geq       i                   
Token:Code=258 Name= BEGIN    Line= 17  Col= 3   Spelling= "begin"
Token:Code=260 Name= ID       Line= 18  Col= 5   Spelling= "writeinteger"
Token:Code=276 Name= LPAREN   Line= 18  Col= 17  Spelling= "("
Token:Code=260 Name= ID       Line= 18  Col= 18  Spelling= "count"
Token:Code=277 Name= RPAREN   Line= 18  Col= 23  Spelling= ")"
#063 factor -> ID(count)

Symbol(Variable Symbol) id(count)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(1) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writeinteger)( expression_list )
