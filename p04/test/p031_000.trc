Token:Code=293 Name=  PROGRAM Line=  12 Col=   1 Spelling= "program"
Token:Code=260 Name=       ID Line=  12 Col=   9 Spelling= "p031_000"
Token:Code=268 Name= SEMICOLON Line=  12 Col=  17 Spelling= ";"
#005 program_parameters -> empty
#002 program_head -> PROGRAM ID(p031_000) program_parameters ;
#010 variable_declarations -> empty
Token:Code=297 Name=      VAR Line=  13 Col=   3 Spelling= "var"
Token:Code=260 Name=       ID Line=  13 Col=   7 Spelling= "cash"
#008 identifier_list -> ID(cash)
 identifier_list={cash}Token:Code=269 Name=    COLON Line=  13 Col=  11 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=  12 Spelling= "real"
#014 standard_type -> ID(real)

Symbol(Type Symbol) id(real)
  type(Real)
    size(1) alignment(1)
#012 type -> standard_type
Token:Code=268 Name= SEMICOLON Line=  13 Col=  16 Spelling= ";"
#011 variable_declarations -> variable_declarations VAR identifier_list:type;
Token:Code=258 Name=    BEGIN Line=  14 Col=   1 Spelling= "begin"
#015 subprogram_declarations -> empty
#003 program_declarations -> variable_declarations subprogram_declarations
Token:Code=260 Name=       ID Line=  15 Col=   3 Spelling= "write"
Token:Code=276 Name=   LPAREN Line=  15 Col=   8 Spelling= "("
Token:Code=299 Name=   CHRLIT Line=  15 Col=   9 Spelling= "How much cash do you have? "
#070 factor -> CHRLIT(How much cash do you have? )
#056 term -> factor
Token:Code=277 Name=   RPAREN Line=  15 Col=  36 Spelling= ")"
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(write) ( expression_list )
#030 statement -> procedure_statement
#027 statement_list -> statement
Token:Code=268 Name= SEMICOLON Line=  15 Col=  37 Spelling= ";"
Token:Code=260 Name=       ID Line=  16 Col=   3 Spelling= "readln"
Token:Code=276 Name=   LPAREN Line=  16 Col=   9 Spelling= "("
Token:Code=260 Name=       ID Line=  16 Col=  10 Spelling= "cash"
Token:Code=277 Name=   RPAREN Line=  16 Col=  14 Spelling= ")"
#063 factor -> ID(cash)
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(readln) ( expression_list )
#030 statement -> procedure_statement
#028 statement_list -> statement_list ; statement
Token:Code=268 Name= SEMICOLON Line=  16 Col=  15 Spelling= ";"
Token:Code=287 Name=       IF Line=  17 Col=   3 Spelling= "if"
Token:Code=260 Name=       ID Line=  17 Col=   6 Spelling= "cash"
Token:Code=272 Name=      LES Line=  17 Col=  10 Spelling= "<"
#063 factor -> ID(cash)
#056 term -> factor
#048 simple_expression -> term
#044 relop -> <
Token:Code=300 Name=   REALIT Line=  17 Col=  11 Spelling= "100.0"
#069 factor -> REALIT(100.0)
#056 term -> factor
Token:Code=294 Name=     THEN Line=  17 Col=  17 Spelling= "then"
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
Token:Code=258 Name=    BEGIN Line=  18 Col=   5 Spelling= "begin"
Token:Code=260 Name=       ID Line=  19 Col=   7 Spelling= "writeln"
Token:Code=276 Name=   LPAREN Line=  19 Col=  14 Spelling= "("
Token:Code=299 Name=   CHRLIT Line=  19 Col=  15 Spelling= "You wicked and slothful person."
#070 factor -> CHRLIT(You wicked and slothful person.)
#056 term -> factor
Token:Code=277 Name=   RPAREN Line=  19 Col=  46 Spelling= ")"
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(writeln) ( expression_list )
#030 statement -> procedure_statement
#027 statement_list -> statement
Token:Code=268 Name= SEMICOLON Line=  19 Col=  47 Spelling= ";"
Token:Code=260 Name=       ID Line=  20 Col=   7 Spelling= "writeln"
Token:Code=276 Name=   LPAREN Line=  20 Col=  14 Spelling= "("
Token:Code=299 Name=   CHRLIT Line=  20 Col=  15 Spelling= "I''d never go out with you."
#070 factor -> CHRLIT(I''d never go out with you.)
#056 term -> factor
Token:Code=277 Name=   RPAREN Line=  20 Col=  42 Spelling= ")"
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(writeln) ( expression_list )
#030 statement -> procedure_statement
#028 statement_list -> statement_list ; statement
Token:Code=259 Name=      END Line=  21 Col=   5 Spelling= "end"
#026 optional_statements -> statement_list
#024 compound_statement -> BEGIN optional_statement END
#031 statement -> compound_statement
Token:Code=285 Name=     ELSE Line=  22 Col=   3 Spelling= "else"
Token:Code=258 Name=    BEGIN Line=  23 Col=   5 Spelling= "begin"
Token:Code=260 Name=       ID Line=  24 Col=   7 Spelling= "writeln"
Token:Code=276 Name=   LPAREN Line=  24 Col=  14 Spelling= "("
Token:Code=299 Name=   CHRLIT Line=  24 Col=  15 Spelling= "Come on, honey, let''s have a good time tonight!"
#070 factor -> CHRLIT(Come on, honey, let''s have a good time tonight!)
#056 term -> factor
Token:Code=277 Name=   RPAREN Line=  24 Col=  63 Spelling= ")"
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(writeln) ( expression_list )
#030 statement -> procedure_statement
#027 statement_list -> statement
Token:Code=259 Name=      END Line=  25 Col=   5 Spelling= "end"
#026 optional_statements -> statement_list
#024 compound_statement -> BEGIN optional_statement END
#031 statement -> compound_statement
#032 statement -> IF expression THEN statement ELSE statement 
#028 statement_list -> statement_list ; statement
Token:Code=268 Name= SEMICOLON Line=  25 Col=   8 Spelling= ";"
Token:Code=260 Name=       ID Line=  26 Col=   3 Spelling= "writeln"
Token:Code=276 Name=   LPAREN Line=  26 Col=  10 Spelling= "("
Token:Code=299 Name=   CHRLIT Line=  26 Col=  11 Spelling= "See you later!"
#070 factor -> CHRLIT(See you later!)
#056 term -> factor
Token:Code=277 Name=   RPAREN Line=  26 Col=  25 Spelling= ")"
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
#037 procedure_statement -> ID(writeln) ( expression_list )
#030 statement -> procedure_statement
#028 statement_list -> statement_list ; statement
Token:Code=259 Name=      END Line=  27 Col=   1 Spelling= "end"
#026 optional_statements -> statement_list
#024 compound_statement -> BEGIN optional_statement END
Token:Code=266 Name=   PERIOD Line=  27 Col=  14 Spelling= "."
#004 program_body -> compound_statement .
#001 program -> program_head program_declarations program_body

Locality: lexical level 1

  Symbol(Variable Symbol) id(cash)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(5)

Locality: lexical level 1

  Symbol(Variable Symbol) id(cash)
    type(Real)
      size(1) alignment(1)
    lexicallevel(1) address(5)

