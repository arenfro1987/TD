//-----------------------------------------------------------------------------
//File Locality.cpp defines the attributes of a Locality for the symbol table 
//-----------------------------------------------------------------------------
//Author: Thomas R. Turner
//E-Mail: trturner@ucok.edu
//January, 2009
//-----------------------------------------------------------------------------
//Copyright January, 2009 by Thomas R. Turner.
//Do not reproduce without permission from Thomas R. Turner.
//-----------------------------------------------------------------------------
//C++ include files and namespace std
//-----------------------------------------------------------------------------
#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>
#include <cmath>
using namespace std;
//-----------------------------------------------------------------------------
//Application include files
//-----------------------------------------------------------------------------
#include "Typ.h"
#include "Sym.h"
#include "NameSpace.h"
#include "Locality.h"
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
Locality::Locality(string& id):identifier(id),offset(5){}
Locality::Locality(char* id):identifier(id),offset(5){}
int Locality::Offset(void){return offset;}
int Locality::Offset(int size,int alignment)
{    //-------------------------------------------------------------------
     //Variables and fields must be aligned on the boundaries given by
     //their types.  For example, floating point values having type
     //real must be aligned on 64-bit boundaries.
     //-------------------------------------------------------------------
     //Determine if the current offset can be used to allocate the
     //input variable or field.
     //-------------------------------------------------------------------
     int remainder=offset%alignment;
     //-------------------------------------------------------------------
     //Add unused space to make the current offset suitable to allocate
     //storage for the next item
     //-------------------------------------------------------------------
     if (remainder) offset=offset+(alignment-remainder);
     int o=offset;        //Record and return the current offset
     offset=offset+size;  //Allocate storage for the given item
     return o;
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void Locality::Print(ostream& o)
{   o << endl;
    o << "Locality: " << identifier;
    NameSpace::Print(o);
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
void Locality::Print(ostream& o,int ll)
{   o << endl;
    o << "Locality: " << identifier;
    o << " Lexical level: " << ll;
    NameSpace::Print(o);
}
//-----------------------------------------------------------------------------
//-----------------------------------------------------------------------------
string Locality::Id(void){return identifier;}
