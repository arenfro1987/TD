
Token:Code=294 Name=   PROGRAM line= 12 col=  1 Spelling="program"
Token:Code=301 Name=        ID line= 12 col=  9 Spelling="p017_000"
Token:Code=266 Name= SEMICOLON line= 12 col= 17 Spelling=";"
#005 program_parameters -> empty
#002 program_head -> PROGRAM ID(p017_000) program_parameters ;
#010 variable_declarations -> empty
Token:Code=287 Name=  FUNCTION line= 13 col=  3 Spelling="function"
#015 subprogram_declarations -> empty
Token:Code=301 Name=        ID line= 13 col= 12 Spelling="max"
Token:Code=274 Name=    LPAREN line= 13 col= 15 Spelling="("
Token:Code=301 Name=        ID line= 13 col= 16 Spelling="a"
#008 identifier_list -> ID(a) identifier_list={a}
Token:Code=265 Name=     COMMA line= 13 col= 17 Spelling=","
Token:Code=301 Name=        ID line= 13 col= 18 Spelling="b"
#009 identifier_list -> identifier_list , ID(b) identifier_list={a,b}
Token:Code=267 Name=     COLON line= 13 col= 19 Spelling=":"
Token:Code=301 Name=        ID line= 13 col= 20 Spelling="integer"
#014 standard_type -> ID(integer)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type -> standard_type
#022 parameter_list -> identifier_list : type
Token:Code=275 Name=    RPAREN line= 13 col= 27 Spelling=")"
#021 subprogram_parameters -> ( parameter_list )
Token:Code=267 Name=     COLON line= 13 col= 28 Spelling=":"
Token:Code=301 Name=        ID line= 13 col= 29 Spelling="integer"
#014 standard_type -> ID(integer)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
Token:Code=266 Name= SEMICOLON line= 13 col= 36 Spelling=";"
#018 subprogram_head -> FUNCTION ID(max) subprogram_parameters : standard_type ;
#010 variable_declarations -> empty
Token:Code=282 Name=     BEGIN line= 14 col=  3 Spelling="begin"
Token:Code=288 Name=        IF line= 15 col=  5 Spelling="if"
Token:Code=301 Name=        ID line= 15 col=  8 Spelling="a"
Token:Code=273 Name=       GRT line= 15 col=  9 Spelling=">"
#063 factor -> ID(a)
Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)
          lvi       0         5         
#056 term -> factor
#048 simple_expression -> term
#046 relop -> >
Token:Code=301 Name=ID         line=15  col=10  Spelling="b"
Token:Code=295 Name=THEN       line=15  col=12  Spelling="then"
#063 factor -> ID(b)
Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)
          lvi       0         6         
#056 term -> factor
#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression
Token:Code=301 Name=ID         line=15  col=17  Spelling="max"
Token:Code=263 Name=ASSIGN     line=15  col=20  Spelling=":="
#034 variable -> ID(max)
Symbol(Function Symbol) id(max)
  type(Subprogram)
      Return Type
        type(Integer)
          size(1) alignment(1)
      Parameter Types
        type(Integer)
          size(1) alignment(1)
        type(Integer)
          size(1) alignment(1)
  lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
          lda       0         0         
Token:Code=301 Name=ID         line=15  col=22  Spelling="a"
Token:Code=285 Name=ELSE       line=15  col=24  Spelling="else"
#063 factor -> ID(a)
Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)
          lvi       0         5         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement -> variable := expression
          lda       0         0         
          lvi       0         5         
          sti       i                   
Token:Code=301 Name=ID         line=15  col=29  Spelling="max"
Token:Code=263 Name=ASSIGN     line=15  col=32  Spelling=":="
#034 variable -> ID(max)
Symbol(Function Symbol) id(max)
  type(Subprogram)
      Return Type
        type(Integer)
          size(1) alignment(1)
      Parameter Types
        type(Integer)
          size(1) alignment(1)
        type(Integer)
          size(1) alignment(1)
  lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
          lda       0         0         
Token:Code=301 Name=ID         line=15  col=34  Spelling="b"
Token:Code=286 Name=END        line=16  col=3   Spelling="end"
#063 factor -> ID(b)
Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)
          lvi       0         6         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement -> variable := expression
          lda       0         0         
          lvi       0         6         
          sti       i                   
#032 statement -> IF expression THEN statement ELSE statement 
          lvi       0         5         
          lvi       0         6         
          grt       i                   
          fjp                 L00007    
          lda       0         0         
          lvi       0         5         
          sti       i                   
          ujp                 L00008    
L00007                                  
          lda       0         0         
          lvi       0         6         
          sti       i                   
L00008                                  
#027 statement_list -> statement
          lvi       0         5         
          lvi       0         6         
          grt       i                   
          fjp                 L00007    
          lda       0         0         
          lvi       0         5         
          sti       i                   
          ujp                 L00008    
L00007                                  
          lda       0         0         
          lvi       0         6         
          sti       i                   
L00008                                  
#026 optional_statements -> statement_list
          lvi       0         5         
          lvi       0         6         
          grt       i                   
          fjp                 L00007    
          lda       0         0         
          lvi       0         5         
          sti       i                   
          ujp                 L00008    
L00007                                  
          lda       0         0         
          lvi       0         6         
          sti       i                   
L00008                                  
#024 compound_statement -> BEGIN optional_statement END
          lvi       0         5         
          lvi       0         6         
          grt       i                   
          fjp                 L00007    
          lda       0         0         
          lvi       0         5         
          sti       i                   
          ujp                 L00008    
L00007                                  
          lda       0         0         
          lvi       0         6         
          sti       i                   
L00008                                  
#017 subprogram_declaration -> subprogram_head variable_declarations compound_statement
prolog
L00004    ent       sp        L00005    
          ent       ep        L00006    
compound_statement
          lvi       0         5         
          lvi       0         6         
          grt       i                   
          fjp                 L00007    
          lda       0         0         
          lvi       0         5         
          sti       i                   
          ujp                 L00008    
L00007                                  
          lda       0         0         
          lvi       0         6         
          sti       i                   
L00008                                  
          rtn       i                   

#define   L00005    6                   


#define   L00006    8                   

epilog
          rtn       i                   
#define   L00005    6                   
#define   L00006    8                   
Locality: lexical level 2

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(5)
  Symbol(Variable Symbol) id(b)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(6)

Token:Code=266 Name=SEMICOLON  line=16  col=11  Spelling=";"
#016 subprogram_declarations -> subprogram_declarations subprogram_declaration ;
Token:Code=293 Name=PROCEDURE  line=17  col=3   Spelling="procedure"
Token:Code=301 Name=ID         line=17  col=13  Spelling="print"
Token:Code=274 Name=LPAREN     line=17  col=18  Spelling="("
Token:Code=301 Name=ID         line=17  col=19  Spelling="a"
#008 identifier_list -> ID(a) identifier_list={a}
Token:Code=265 Name=COMMA      line=17  col=20  Spelling=","
Token:Code=301 Name=ID         line=17  col=21  Spelling="b"
#009 identifier_list -> identifier_list , ID(b) identifier_list={a,b}
Token:Code=267 Name=COLON      line=17  col=22  Spelling=":"
Token:Code=301 Name=ID         line=17  col=23  Spelling="integer"
#014 standard_type -> ID(integer)
Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type -> standard_type
#022 parameter_list -> identifier_list : type
Token:Code=275 Name=RPAREN     line=17  col=30  Spelling=")"
#021 subprogram_parameters -> ( parameter_list )
Token:Code=266 Name=SEMICOLON  line=17  col=31  Spelling=";"
#019 subprogram_head -> PROCDURE ID(print) subprogram_parameters ;
#010 variable_declarations -> empty
Token:Code=282 Name=BEGIN      line=18  col=3   Spelling="begin"
Token:Code=301 Name=ID         line=19  col=5   Spelling="writeln"
Token:Code=274 Name=LPAREN     line=19  col=12  Spelling="("
Token:Code=304 Name=CHRLIT     line=19  col=13  Spelling="'The maximum of '"
#070 factor -> CHRLIT('The maximum of ')
          ldc       s         'The maximum of '
#056 term -> factor
Token:Code=265 Name=COMMA      line=19  col=30  Spelling=","
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
Token:Code=301 Name=ID         line=19  col=31  Spelling="a"
Token:Code=265 Name=COMMA      line=19  col=32  Spelling=","
#063 factor -> ID(a)
Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)
          lvi       0         5         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
Token:Code=304 Name=CHRLIT     line=19  col=33  Spelling="' and '"
#070 factor -> CHRLIT(' and ')
          ldc       s         ' and '   
#056 term -> factor
Token:Code=265 Name=COMMA      line=19  col=40  Spelling=","
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
Token:Code=301 Name=ID         line=19  col=41  Spelling="b"
Token:Code=265 Name=COMMA      line=19  col=42  Spelling=","
#063 factor -> ID(b)
Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)
          lvi       0         6         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
Token:Code=304 Name=CHRLIT     line=19  col=43  Spelling="' is '"
#070 factor -> CHRLIT(' is ')
          ldc       s         ' is '    
#056 term -> factor
Token:Code=265 Name=COMMA      line=19  col=49  Spelling=","
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
Token:Code=301 Name=ID         line=19  col=50  Spelling="max"
Token:Code=274 Name=LPAREN     line=19  col=53  Spelling="("
Token:Code=301 Name=ID         line=19  col=54  Spelling="a"
Token:Code=265 Name=COMMA      line=19  col=55  Spelling=","
#063 factor -> ID(a)
Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)
          lvi       0         5         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
Token:Code=301 Name=ID         line=19  col=56  Spelling="b"
Token:Code=275 Name=RPAREN     line=19  col=57  Spelling=")"
#063 factor -> ID(b)
Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)
          lvi       0         6         
#056 term -> factor
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
#065 factor -> ID(max) ( expression_list )
          mst       1                   
          lvi       0         5         
          lvi       0         6         
          cup       2         L00004    
#056 term -> factor
Token:Code=275 Name=RPAREN     line=19  col=58  Spelling=")"
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
#037 procedure_statement -> ID(writeln) ( expression_list )
          csp                 wln       
#030 statement -> procedure_statement
#027 statement_list -> statement
          ldc       s         'The maximum of '
          lvi       0         5         
          ldc       s         ' and '   
          lvi       0         6         
          ldc       s         ' is '    
          mst       1                   
          lvi       0         5         
          lvi       0         6         
          cup       2         L00004    
          csp                 wln       
Token:Code=286 Name=END        line=20  col=3   Spelling="end"
#026 optional_statements -> statement_list
          ldc       s         'The maximum of '
          lvi       0         5         
          ldc       s         ' and '   
          lvi       0         6         
          ldc       s         ' is '    
          mst       1                   
          lvi       0         5         
          lvi       0         6         
          cup       2         L00004    
          csp                 wln       
#024 compound_statement -> BEGIN optional_statement END
          ldc       s         'The maximum of '
          lvi       0         5         
          ldc       s         ' and '   
          lvi       0         6         
          ldc       s         ' is '    
          mst       1                   
          lvi       0         5         
          lvi       0         6         
          cup       2         L00004    
          csp                 wln       
#017 subprogram_declaration -> subprogram_head variable_declarations compound_statement
prolog
L00009    ent       sp        L00010    
          ent       ep        L00011    
compound_statement
          ldc       s         'The maximum of '
          lvi       0         5         
          ldc       s         ' and '   
          lvi       0         6         
          ldc       s         ' is '    
          mst       1                   
          lvi       0         5         
          lvi       0         6         
          cup       2         L00004    
          csp                 wln       
          rtn       p                   

#define   L00010    6                   


#define   L00011    18                  

epilog
          rtn       p                   
#define   L00010    6                   
#define   L00011    18                  
Locality: lexical level 2

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(5)
  Symbol(Variable Symbol) id(b)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(6)

Token:Code=266 Name=SEMICOLON  line=20  col=13  Spelling=";"
#016 subprogram_declarations -> subprogram_declarations subprogram_declaration ;
Token:Code=282 Name=BEGIN      line=21  col=1   Spelling="begin"
#003 program_declarations -> variable_declarations subprogram_declarations
Token:Code=301 Name=ID         line=22  col=3   Spelling="print"
Token:Code=274 Name=LPAREN     line=22  col=8   Spelling="("
Token:Code=302 Name=INTLIT     line=22  col=9   Spelling="2"
#068 factor -> INTLIT(2)
          ldc       i         2         
#056 term -> factor
Token:Code=265 Name=COMMA      line=22  col=10  Spelling=","
#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list -> expression
Token:Code=302 Name=INTLIT     line=22  col=11  Spelling="3"
#068 factor -> INTLIT(3)
          ldc       i         3         
#056 term -> factor
Token:Code=275 Name=RPAREN     line=22  col=12  Spelling=")"
#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list -> expression_list , expression
#037 procedure_statement -> ID(print) ( expression_list )
          mst       0                   
          ldc       i         2         
          ldc       i         3         
          cup       2         L00009    
#030 statement -> procedure_statement
#027 statement_list -> statement
          mst       0                   
          ldc       i         2         
          ldc       i         3         
          cup       2         L00009    
Token:Code=286 Name=END        line=23  col=1   Spelling="end"
#026 optional_statements -> statement_list
          mst       0                   
          ldc       i         2         
          ldc       i         3         
          cup       2         L00009    
#024 compound_statement -> BEGIN optional_statement END
          mst       0                   
          ldc       i         2         
          ldc       i         3         
          cup       2         L00009    
Token:Code=264 Name=PERIOD     line=23  col=14  Spelling="."
#004 program_body -> compound_statement .
#001 program -> program_head program_declarations program_body
prolog
L00001    ent       sp        L00002    
          ent       ep        L00003    
compound_statement
          mst       0                   
          ldc       i         2         
          ldc       i         3         
          cup       2         L00009    
          rtn       p                   

#define   L00002    4                   


#define   L00003    11                  

epilog
          rtn       p                   
#define   L00002    4                   
#define   L00003    11                  
program epilog
          mst       0                   
          cup       0         L00001    
          stp                           
Locality: lexical level 1

  Symbol(Function Symbol) id(max)
    type(Subprogram)
        Return Type
          type(Integer)
            size(1) alignment(1)
        Parameter Types
          type(Integer)
            size(1) alignment(1)
          type(Integer)
            size(1) alignment(1)
    lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
  Symbol(Procedure Symbol) id(print)
    type(Subprogram)
        Return Type
          type(Void)
            size(0) alignment(0)
        Parameter Types
          type(Integer)
            size(1) alignment(1)
          type(Integer)
            size(1) alignment(1)
    lexicallevel(1) elabel(L00009) splabel(L00010) eplabel(L00011)

Locality: lexical level 0

