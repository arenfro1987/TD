Token:Code=294 Name=  PROGRAM Line=  12 Col=   1 Spelling= "program"
Token:Code=260 Name=       ID Line=  12 Col=   9 Spelling= "p027_000"
Token:Code=268 Name= SEMICOLON Line=  12 Col=  17 Spelling= ";"
#005 program_parameters -> Empty
#002 program_head->PROGRAM ID program_parameters
#010 declarations->Empty
Token:Code=287 Name= FUNCTION Line=  13 Col=   3 Spelling= "function"
#015 subprogram_declarations->Empty
Token:Code=260 Name=       ID Line=  13 Col=  12 Spelling= "max"
Token:Code=276 Name=   LPAREN Line=  13 Col=  15 Spelling= "("
Token:Code=260 Name=       ID Line=  13 Col=  16 Spelling= "a"
#008 identifier_list->ID(a)
 identifier_list={a}Token:Code=267 Name=    COMMA Line=  13 Col=  17 Spelling= ","
Token:Code=260 Name=       ID Line=  13 Col=  18 Spelling= "b"
#009 identifier_list -> identifier_list , ID(b)
 identifier_list={a,b}Token:Code=269 Name=    COLON Line=  13 Col=  19 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=  20 Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type->standard_type
#022 parameter_list->identifier_list: type
Token:Code=277 Name=   RPAREN Line=  13 Col=  27 Spelling= ")"
#021 subprogram_parameters->( parameter_list )
Token:Code=269 Name=    COLON Line=  13 Col=  28 Spelling= ":"
Token:Code=260 Name=       ID Line=  13 Col=  29 Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
Token:Code=268 Name= SEMICOLON Line=  13 Col=  36 Spelling= ";"
#018 subprogram_head->FUNCTION ID(max)  subprogram_parameters : standard_type
#010 declarations->Empty
Token:Code=258 Name=    BEGIN Line=  14 Col=   3 Spelling= "begin"
Token:Code=288 Name=       IF Line=  15 Col=   5 Spelling= "if"
Token:Code=260 Name=       ID Line=  15 Col=   8 Spelling= "a"
Token:Code=274 Name=      GRT Line=  15 Col=   9 Spelling= ">"
#063 factor -> ID(a)

Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#046 relop -> >
Token:Code=260 Name= ID       Line= 15  Col= 10  Spelling= "b"
Token:Code=295 Name= THEN     Line= 15  Col= 12  Spelling= "then"
#063 factor -> ID(b)

Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)ll=0
a (address)=6

          lvi       0         6         
#056 term -> factor

#048 simple_expression -> term
#041 expression -> simple_expression relop simple_expression

          lvi       0         5         

          lvi       0         6         

          grt       i                   
Token:Code=260 Name= ID       Line= 15  Col= 17  Spelling= "max"
Token:Code=265 Name= ASSIGN   Line= 15  Col= 20  Spelling= ":="
#034 VARIABLE->ID(max)

Symbol(Function Symbol) id(max)
  type(Subprogram)
      Return Type
        type(Integer)
          size(1) alignment(1)
      Parameter Types
        type(Integer)
          size(1) alignment(1)
        type(Integer)
          size(1) alignment(1)
  lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
          lda       0         0         
Token:Code=260 Name= ID       Line= 15  Col= 22  Spelling= "a"
Token:Code=286 Name= ELSE     Line= 15  Col= 24  Spelling= "else"
#063 factor -> ID(a)

Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement->variable := expression

          lda       0         0         

          lvi       0         5         

          sti       i                   
Token:Code=260 Name= ID       Line= 15  Col= 29  Spelling= "max"
Token:Code=265 Name= ASSIGN   Line= 15  Col= 32  Spelling= ":="
#034 VARIABLE->ID(max)

Symbol(Function Symbol) id(max)
  type(Subprogram)
      Return Type
        type(Integer)
          size(1) alignment(1)
      Parameter Types
        type(Integer)
          size(1) alignment(1)
        type(Integer)
          size(1) alignment(1)
  lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
          lda       0         0         
Token:Code=260 Name= ID       Line= 15  Col= 34  Spelling= "b"
Token:Code=259 Name= END      Line= 16  Col= 3   Spelling= "end"
#063 factor -> ID(b)

Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)ll=0
a (address)=6

          lvi       0         6         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#029 statement->variable := expression

          lda       0         0         

          lvi       0         6         

          sti       i                   
#032 statement->IF expression THEN statement ELSE statement

          lvi       0         5         

          lvi       0         6         

          grt       i                   

          fjp                 L00007    

          lda       0         0         

          lvi       0         5         

          sti       i                   

          ujp                 L00008    

L00007                                  

          lda       0         0         

          lvi       0         6         

          sti       i                   

L00008                                  
#027 statement_list->statement
#026 optional_statements->statement_list
#024 compound_statement->BEGIN optional_statements END
#017 subprogram_declarations->subprogram_head declarations compound_statement

Locality: lexical level 2

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(5)
  Symbol(Variable Symbol) id(b)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(6)
Token:Code=268 Name= SEMICOLON Line= 16  Col= 11  Spelling= ";"
#016 subprogram_declarations->subprogram_declarations subprogram_declarations;
Token:Code=293 Name= PROCEDURE Line= 17  Col= 3   Spelling= "procedure"
Token:Code=260 Name= ID       Line= 17  Col= 13  Spelling= "print"
Token:Code=276 Name= LPAREN   Line= 17  Col= 18  Spelling= "("
Token:Code=260 Name= ID       Line= 17  Col= 19  Spelling= "a"
#008 identifier_list->ID(a)
 identifier_list={a}Token:Code=269 Name= COLON    Line= 17  Col= 20  Spelling= ":"
Token:Code=260 Name= ID       Line= 17  Col= 21  Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type->standard_type
#022 parameter_list->identifier_list: type
Token:Code=268 Name= SEMICOLON Line= 17  Col= 28  Spelling= ";"
Token:Code=260 Name= ID       Line= 17  Col= 29  Spelling= "b"
#008 identifier_list->ID(b)
 identifier_list={b}Token:Code=269 Name= COLON    Line= 17  Col= 30  Spelling= ":"
Token:Code=260 Name= ID       Line= 17  Col= 31  Spelling= "integer"
#014 standard_type -> ID(integer)

Symbol(Type Symbol) id(integer)
  type(Integer)
    size(1) alignment(1)
#012 type->standard_type
#023 parameter_list-> parameter_list ; identifier_list : type
Token:Code=277 Name= RPAREN   Line= 17  Col= 38  Spelling= ")"
#021 subprogram_parameters->( parameter_list )
Token:Code=268 Name= SEMICOLON Line= 17  Col= 39  Spelling= ";"
#019 subprogram_head->PROCEDURE ID(print) subprogram_parameters ;
#010 declarations->Empty
Token:Code=258 Name= BEGIN    Line= 18  Col= 3   Spelling= "begin"
Token:Code=260 Name= ID       Line= 19  Col= 5   Spelling= "writestring"
Token:Code=276 Name= LPAREN   Line= 19  Col= 16  Spelling= "("
Token:Code=300 Name= CHRLIT   Line= 19  Col= 17  Spelling= "The maximum of "
#070 factor -> CHRLIT(The maximum of )

          ldc       c         The maximum of 
#056 term -> factor
Token:Code=277 Name= RPAREN   Line= 19  Col= 32  Spelling= ")"

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writestring)( expression_list )
id="writestring"

          csp                 wrs       
#030 statement->procedure_statement
#027 statement_list->statement
Token:Code=268 Name= SEMICOLON Line= 19  Col= 33  Spelling= ";"
Token:Code=260 Name= ID       Line= 20  Col= 5   Spelling= "writeinteger"
Token:Code=276 Name= LPAREN   Line= 20  Col= 17  Spelling= "("
Token:Code=260 Name= ID       Line= 20  Col= 18  Spelling= "a"
Token:Code=277 Name= RPAREN   Line= 20  Col= 19  Spelling= ")"
#063 factor -> ID(a)

Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writeinteger)( expression_list )
id="writeinteger"

          csp                 wri       
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
Token:Code=268 Name= SEMICOLON Line= 20  Col= 20  Spelling= ";"
Token:Code=260 Name= ID       Line= 21  Col= 5   Spelling= "writestring"
Token:Code=276 Name= LPAREN   Line= 21  Col= 16  Spelling= "("
Token:Code=300 Name= CHRLIT   Line= 21  Col= 17  Spelling= " and "
#070 factor -> CHRLIT( and )

          ldc       c          and      
#056 term -> factor
Token:Code=277 Name= RPAREN   Line= 21  Col= 22  Spelling= ")"

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writestring)( expression_list )
id="writestring"

          csp                 wrs       
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
Token:Code=268 Name= SEMICOLON Line= 21  Col= 23  Spelling= ";"
Token:Code=260 Name= ID       Line= 22  Col= 5   Spelling= "writeinteger"
Token:Code=276 Name= LPAREN   Line= 22  Col= 17  Spelling= "("
Token:Code=260 Name= ID       Line= 22  Col= 18  Spelling= "b"
Token:Code=277 Name= RPAREN   Line= 22  Col= 19  Spelling= ")"
#063 factor -> ID(b)

Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)ll=0
a (address)=6

          lvi       0         6         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writeinteger)( expression_list )
id="writeinteger"

          csp                 wri       
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
Token:Code=268 Name= SEMICOLON Line= 22  Col= 20  Spelling= ";"
Token:Code=260 Name= ID       Line= 23  Col= 5   Spelling= "writestring"
Token:Code=276 Name= LPAREN   Line= 23  Col= 16  Spelling= "("
Token:Code=300 Name= CHRLIT   Line= 23  Col= 17  Spelling= " is "
#070 factor -> CHRLIT( is )

          ldc       c          is       
#056 term -> factor
Token:Code=277 Name= RPAREN   Line= 23  Col= 21  Spelling= ")"

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writestring)( expression_list )
id="writestring"

          csp                 wrs       
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
Token:Code=268 Name= SEMICOLON Line= 23  Col= 22  Spelling= ";"
Token:Code=260 Name= ID       Line= 24  Col= 5   Spelling= "writeinteger"
Token:Code=276 Name= LPAREN   Line= 24  Col= 17  Spelling= "("
Token:Code=260 Name= ID       Line= 24  Col= 18  Spelling= "max"
Token:Code=276 Name= LPAREN   Line= 24  Col= 21  Spelling= "("
Token:Code=260 Name= ID       Line= 24  Col= 22  Spelling= "a"
Token:Code=267 Name= COMMA    Line= 24  Col= 23  Spelling= ","
#063 factor -> ID(a)

Symbol(Variable Symbol) id(a)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(5)ll=0
a (address)=5

          lvi       0         5         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
Token:Code=260 Name= ID       Line= 24  Col= 24  Spelling= "b"
Token:Code=277 Name= RPAREN   Line= 24  Col= 25  Spelling= ")"
#063 factor -> ID(b)

Symbol(Variable Symbol) id(b)
  type(Integer)
    size(1) alignment(1)
  lexicallevel(2) address(6)ll=0
a (address)=6

          lvi       0         6         
#056 term -> factor

#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list->expression_list , expression
#065 factor -> ID(max) ( expression_list )

          mst       1                   

          lvi       0         5         

          lvi       0         6         

          cup       2         L00004    
#056 term -> factor
Token:Code=277 Name= RPAREN   Line= 24  Col= 26  Spelling= ")"

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
#037 procedure_statement->ID(writeinteger)( expression_list )
id="writeinteger"

          csp                 wri       
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
Token:Code=268 Name= SEMICOLON Line= 24  Col= 27  Spelling= ";"
Token:Code=260 Name= ID       Line= 25  Col= 5   Spelling= "writeln"
Token:Code=259 Name= END      Line= 26  Col= 3   Spelling= "end"
#036 procedure_statement->ID(writeln)
#030 statement->procedure_statement
#028 statement_list->statement_list ; statement
#026 optional_statements->statement_list
#024 compound_statement->BEGIN optional_statements END
#017 subprogram_declarations->subprogram_head declarations compound_statement

Locality: lexical level 2

  Symbol(Variable Symbol) id(a)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(5)
  Symbol(Variable Symbol) id(b)
    type(Integer)
      size(1) alignment(1)
    lexicallevel(2) address(6)
Token:Code=268 Name= SEMICOLON Line= 26  Col= 13  Spelling= ";"
#016 subprogram_declarations->subprogram_declarations subprogram_declarations;
Token:Code=258 Name= BEGIN    Line= 27  Col= 1   Spelling= "begin"
#003 program_declarations->declarations subprogram_declarations
Token:Code=260 Name= ID       Line= 28  Col= 3   Spelling= "print"
Token:Code=276 Name= LPAREN   Line= 28  Col= 8   Spelling= "("
Token:Code=302 Name= INTLIT   Line= 28  Col= 9   Spelling= "2"
#068 factor -> INTLIT(2)

          ldc       i         2         
#056 term -> factor
Token:Code=267 Name= COMMA    Line= 28  Col= 10  Spelling= ","

#048 simple_expression -> term
#040 expression -> simple_expression
#038 expression_list->expression
Token:Code=302 Name= INTLIT   Line= 28  Col= 11  Spelling= "3"
#068 factor -> INTLIT(3)

          ldc       i         3         
#056 term -> factor
Token:Code=277 Name= RPAREN   Line= 28  Col= 12  Spelling= ")"

#048 simple_expression -> term
#040 expression -> simple_expression
#039 expression_list->expression_list , expression
#037 procedure_statement->ID(print)( expression_list )
id="print"

          mst       0                   

          ldc       i         2         

          ldc       i         3         

          cup       2         L00009    
#030 statement->procedure_statement
#027 statement_list->statement
Token:Code=259 Name= END      Line= 29  Col= 1   Spelling= "end"
#026 optional_statements->statement_list
#024 compound_statement->BEGIN optional_statements END
Token:Code=266 Name= PERIOD   Line= 29  Col= 14  Spelling= "."
#004 program_body->compound_statement .
#001 Program->program_head program_declarations program_body

Locality: lexical level 1

  Symbol(Function Symbol) id(max)
    type(Subprogram)
        Return Type
          type(Integer)
            size(1) alignment(1)
        Parameter Types
          type(Integer)
            size(1) alignment(1)
          type(Integer)
            size(1) alignment(1)
    lexicallevel(1) elabel(L00004) splabel(L00005) eplabel(L00006)
  Symbol(Procedure Symbol) id(print)
    type(Subprogram)
        Return Type
          type(Void)
            size(0) alignment(0)
        Parameter Types
          type(Integer)
            size(1) alignment(1)
          type(Integer)
            size(1) alignment(1)
    lexicallevel(1) elabel(L00009) splabel(L00010) eplabel(L00011)

Locality: lexical level 0

  Symbol(Standard Function Symbol) id(abs)
    type(Void)
      size(0) alignment(0)
    cspid(abs)
  Symbol(Type Symbol) id(boolean)
    type(Boolean)
      size(1) alignment(1)
  Symbol(Type Symbol) id(char)
    type(Character)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(chr)
    type(Void)
      size(0) alignment(0)
    cspid(chr)
  Symbol(Constant Symbol) id(false)
    type(Boolean)
      size(1) alignment(1)
    Constant value(0)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Type Symbol) id(integer)
    type(Integer)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(ord)
    type(Void)
      size(0) alignment(0)
    cspid(ord)
  Symbol(Program Symbol) id(p027_000)
    type(Void)
      size(0) alignment(0)
    lexicallevel(0) elabel(L00001) splabel(L00002) eplabel(L00003)
  Symbol(Standard Function Symbol) id(pred)
    type(Void)
      size(0) alignment(0)
    cspid(dec)
  Symbol(Standard Procedure Symbol) id(readchar)
    type(Void)
      size(0) alignment(0)
    cspid(rdc)
  Symbol(Standard Procedure Symbol) id(readinteger)
    type(Void)
      size(0) alignment(0)
    cspid(rdi)
  Symbol(Standard Procedure Symbol) id(readln)
    type(Void)
      size(0) alignment(0)
    cspid(rln)
  Symbol(Standard Procedure Symbol) id(readreal)
    type(Void)
      size(0) alignment(0)
    cspid(rdr)
  Symbol(Standard Procedure Symbol) id(readstring)
    type(Void)
      size(0) alignment(0)
    cspid(rds)
  Symbol(Type Symbol) id(real)
    type(Real)
      size(1) alignment(1)
  Symbol(Standard Function Symbol) id(round)
    type(Void)
      size(0) alignment(0)
    cspid(rnd)
  Symbol(Standard Function Symbol) id(sqrt)
    type(Void)
      size(0) alignment(0)
    cspid(sqt)
  Symbol(Standard Function Symbol) id(succ)
    type(Void)
      size(0) alignment(0)
    cspid(inc)
  Symbol(Constant Symbol) id(true)
    type(Boolean)
      size(1) alignment(1)
    Constant value(1)
      type(Boolean)
        size(1) alignment(1)
  Symbol(Standard Function Symbol) id(trunc)
    type(Void)
      size(0) alignment(0)
    cspid(trc)
  Symbol(Standard Procedure Symbol) id(writeboolean)
    type(Void)
      size(0) alignment(0)
    cspid(wrb)
  Symbol(Standard Procedure Symbol) id(writechar)
    type(Void)
      size(0) alignment(0)
    cspid(wrc)
  Symbol(Standard Procedure Symbol) id(writeexponential)
    type(Void)
      size(0) alignment(0)
    cspid(wre)
  Symbol(Standard Procedure Symbol) id(writefixed)
    type(Void)
      size(0) alignment(0)
    cspid(wrf)
  Symbol(Standard Procedure Symbol) id(writeinteger)
    type(Void)
      size(0) alignment(0)
    cspid(wri)
  Symbol(Standard Procedure Symbol) id(writeln)
    type(Void)
      size(0) alignment(0)
    cspid(wln)
  Symbol(Standard Procedure Symbol) id(writestring)
    type(Void)
      size(0) alignment(0)
    cspid(wrs)

